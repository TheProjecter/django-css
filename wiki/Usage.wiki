#summary Using django-css

= Configuration and Usage=

Configuration and usage of django-css is almost identical to django-compress. See the [http://code.google.com/p/django-compress/wiki/Configuration Configuration] and [http://code.google.com/p/django-compress/wiki/Usage Usage] pages at django-compress for information on configuring and usage. 

CSS files will still be treated as CSS files, but you can also use HSS, Sass, or whatever other compiler format you want. For example, to include the HSS file format.hss:

{{{
COMPRESS_CSS = {
    'css': {
	'source_filenames': ('reset.css','format.hss'),
	'output_filename': 'all_compressed.r?.css'
    }
}
}}}

django-css will select which CSS compiler to use based off a file's extension. Adding the following to your settings.py,

{{{
COMPILER_FORMATS = {
    '.hss' : PATH_TO_HSS,
    '.sass' : PATH_TO_SASS
}
}}}

will use HSS to compile `*`.hss files, and Sass to compile `*`.sass files. Other compilers will use different extensions, just add the extension the compiler uses with the path to the compiler like in the above example.

= Specifying Options =
Most CSS compilers have optional arguments. Since django-css just does a command line call to the CSS compiler, you can just add the options to the path string. For example:
{{{
COMPILER_FORMATS = {
    '.hss' : '/home/dziegler/project/hss',
}
}}}
would be a normal call to the HSS compiler. HSS has the optional argument {{{-output <dir>}}} which lets you output the corresponding CSS file to a different directory. If I had the file format.hss and wanted to output the CSS file to project/output/format.css then I would do:
{{{
COMPILER_FORMATS = {
    '.hss' : '/home/dziegler/project/hss -output project/output/',
}
}}}